#initialize the environment
env = Environment()

#Just some variables
sourcePath = '../src/'

headers = ['../gtest/include/', 
            '../gtest/',
            '../gtest/internal/', 
            '../gtest/src/'
            ]

libgtest_sources = ['../gtest/src/gtest.cc',
                    '../gtest/src/gtest_main.cc',
                    '../gtest/src/gtest-death-test.cc',
                    '../gtest/src/gtest-filepath.cc',
                    '../gtest/src/gtest-port.cc',
                    '../gtest/src/gtest-printers.cc',
                    '../gtest/src/gtest-test-part.cc',
                    '../gtest/src/gtest-typed-test.cc'
                    ]

test_sources = ['../test/testCounter.cpp', 
                '../src/counter.cpp'
                ]

tictactoe_sources = ['../src/main.cpp', 
                    '../src/counter.cpp'
                    ]


#Tell scons were stuff is
env.Append(CPPPATH = headers)
env.Append(LIBPATH = ['../lib/'])

r = '../gtest/src/gtest-'
root = '../gtest/src/'
#Create a build target
tictactoe = env.Program(target='tictactoe', source = tictactoe_sources)

libgtest = env.Program(target='libgtest', source = libgtest_sources)

test = env.Program(target='libgtest', source = libgtest_sources)


#Program( 'test', test_sources, LIBS=['gtest'], LIBPATH='../lib/' )

#Set default target
Default(tictactoe)


#Program('program', Glob('*.c'))

#test = Command( target = "tictactoe_test",
#                source = "./tictactoe",
#                action = "./tictactoe > $TARGET" )

#Build condition
#Depends( test, tictactoe )
#AlwaysBuild( test )

#Runs ls command after build, not shure how this works
#ls = Command ('ls', None, 'ls')
#AlwaysBuild ('ls')
#Default ('ls')